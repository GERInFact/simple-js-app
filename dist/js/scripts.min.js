var $pokemonList=document.querySelector(".main-content_pokemon-list");function Pokemon(name,detailsUrl){this.name=name,this.details={},this.detailsUrl=detailsUrl}var modalBox=function(){var $modalContainer=document.querySelector("#modal-container");function hide(){$modalContainer.classList.contains("is-visible")&&$modalContainer.classList.remove("is-visible")}function show(pokemon){if($modalContainer){$modalContainer.innerHTML="",$modalContainer.classList.add("is-visible");var modal=getModal();setModalContent(modal,pokemon).then(()=>{renderModal(modal)}).catch(err=>console.log(err))}}function getModal(){var modal=document.createElement("div");return modal.classList.add("modal"),modal}function setModalContent(modal,pokemon){return new Promise((resolve,reject)=>{pokemon&&modal?(modal.appendChild(getHeader(pokemon)),modal.appendChild(getImage(pokemon.details)),modal.appendChild(getInfos(pokemon.details)),resolve()):reject()})}function getHeader(pokemon){var header=document.createElement("div");return header.classList.add("modal_header"),header.appendChild(getCloseButton()),header.appendChild(getTitle(pokemon)),header}function getCloseButton(){var closeButton=document.createElement("button");return closeButton.classList.add("modal_close"),closeButton.addEventListener("click",hide),closeButton.innerText="Close",closeButton}function getTitle(pokemon){var title=document.createElement("h2");return title.classList.add("modal_title"),title.innerText=pokemon.name,title}function getImage(pokemonDetails){var image=document.createElement("img");return image.setAttribute("src",pokemonDetails.sprites.front_default),image.setAttribute("alt",`The front view of ${pokemonDetails.species.name}`),image.classList.add("modal_image"),image}function getInfos(pokemonDetails){var textContainer=document.createElement("div");return textContainer.classList.add("modal_text-container"),Object.keys(pokemonDetails).forEach(p=>{Array.isArray(pokemonDetails[p])||isObject(pokemonDetails[p])||textContainer.appendChild(getInfoElement(pokemonDetails,p))}),textContainer}function getInfoElement(pokemonDetails,property){var info=document.createElement("p");return info.classList.add("text-container_item"),info.innerText=`${property}: ${pokemonDetails[property]}`,info}function renderModal(modal){requestAnimationFrame(()=>$modalContainer.appendChild(modal))}return window.addEventListener("keydown",e=>{"Escape"===e.key&&hide()}),$modalContainer.addEventListener("click",e=>{e.preventDefault(),e.target===$modalContainer&&hide()}),{show:show,hide:hide}}(),pokemonRepository=function(){var repository=[],apiUrl="https://pokeapi.co/api/v2/pokemon/?limit=150";function add(pokemon){isPokemon(pokemon)&&repository.push(pokemon)}function getAll(){return repository}function getFiltered(filter){return filter?repository.filter(c=>String(Object.values(c)).toLowerCase().includes(String(filter).toLowerCase())):[]}function remove(pokemon){isPokemon(pokemon)&&repository.splice(repository.indexOf(pokemon),1)}function renderPokemonCard(pokemonCard){pokemonCard&&$pokemonList&&$pokemonList.appendChild(pokemonCard)}function getPokemonCards(pokemons){return pokemons.map(p=>getPokemonCard(p))}function getPokemonCard(pokemon){return isPokemon(pokemon)?getAsListItem(pokemon):""}function getAsListItem(pokemon){var listItem=document.createElement("li"),itemButton=getNamedButton(pokemon);return listItem.appendChild(itemButton),listItem}function getNamedButton(pokemon){var itemButton=document.createElement("button");return itemButton.innerText=pokemon.name,itemButton.setAttribute("id",pokemon.name),addButtonEvent(itemButton,"click",pokemon),addButtonStyle(itemButton),itemButton}function addButtonEvent(button,eventName,pokemon){button&&eventName&&button.addEventListener(eventName,()=>{event.preventDefault(),showDetails(pokemon)})}function addButtonStyle(listItem){listItem.classList.add("item_button")}function showDetails(pokemon){isPokemon(pokemon)&&loadDetails(pokemon).then(()=>modalBox.show(pokemon))}function loadDetails(pokemon){return isPokemon(pokemon)?(showLoadingMessage(),fetch(pokemon.detailsUrl).then(res=>res.json()).then(res=>{removeLoadingMessage(),pokemon.details=JSON.parse(JSON.stringify(res))}).catch(err=>console.log(err))):Promise.reject("No details found")}function isPokemon(item){return isObject(item)&&isObjectEqual(item,new Pokemon)}function isObjectEqual(original,clone){var originalProperties=Object.keys(original),cloneProperties=Object.keys(clone);if(!isPropertyCountEqual(originalProperties,cloneProperties))return!1;for(var i=0;i<originalProperties.length;i++)if(originalProperties[i]!==cloneProperties[i])return!1;return!0}function isPropertyCountEqual(originalProperties,cloneProperties){return originalProperties.length===cloneProperties.length}function loadList(){return showLoadingMessage(),fetch(apiUrl).then(res=>res.json()).then(res=>{removeLoadingMessage(),res.results.forEach(r=>add(new Pokemon(r.name,r.url))),addSearchFunctionality()}).catch(err=>console.log(err))}function addSearchFunctionality(){var $searchBar=document.querySelector(".search_bar"),$searchSubmit=document.querySelector(".search_submit");$searchBar&&$searchSubmit&&($searchSubmit.addEventListener("click",e=>{e.preventDefault(),$searchBar.value&&showFound($searchBar.value,$searchBar)}),$searchBar.addEventListener("keydown",e=>{13===e.keyCode&&showFound(e.target.value,$searchBar)}))}function showFound(filter,$searchBar){if(filter&&$searchBar){var pokemonFound=getFiltered(filter).shift();pokemonFound?showDetails(pokemonFound):showNotFoundMessage($searchBar)}}function showNotFoundMessage($searchBar){if(!$searchBar)return;const notFoundMessage=document.createElement("p");notFoundMessage.innerText="PokÃ©mon not found.",$searchBar.parentElement.appendChild(notFoundMessage),setTimeout(()=>{$searchBar.parentElement.removeChild(notFoundMessage)},1e3)}return{add:add,getAll:getAll,getFiltered:getFiltered,getPokemonCards:getPokemonCards,remove:remove,renderPokemonCard:renderPokemonCard,loadList:loadList}}();function showLoadingMessage(){if($pokemonList){var loadingHeader=document.createElement("h2");loadingHeader.classList.add("main-content_loading-message"),loadingHeader.innerText="Fetching data from server...",$pokemonList.parentNode.appendChild(loadingHeader)}}function removeLoadingMessage(){$pokemonList&&$pokemonList.parentNode.removeChild($pokemonList.nextElementSibling)}function renderPokemonCards(pokemons){isEnumeratorValid(pokemons)&&pokemonRepository.getPokemonCards(pokemons).forEach(c=>pokemonRepository.renderPokemonCard(c))}function isEnumeratorValid(enumerator){return enumerator&&Array.isArray(enumerator)&&enumerator.length}function isObject(item){return null!=item&&"object"==typeof item}pokemonRepository.loadList().then(()=>{renderPokemonCards(pokemonRepository.getAll())}).catch(err=>console.log(err));